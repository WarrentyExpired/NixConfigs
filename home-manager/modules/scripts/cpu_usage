#!/usr/bin/env perl
# 
# CPU Usage Monitor with Themed Output
#
# Licensed under the terms of the GNU GPL v3, or any later version.

use strict;
use warnings;
use utf8;
use Getopt::Long;

# Default thresholds
my $t_warn = 50; # Warning threshold
my $t_crit = 80; # Critical threshold
my $cpu_usage = -1;

# Help message
sub help {
    print "Usage: cpu_usage [-w <warning>] [-c <critical>]\n";
    print "-w <percent>: warning threshold to become yellow\n";
    print "-c <percent>: critical threshold to become red\n";
    exit 0;
}

# Parse command-line options
GetOptions("help|h" => \&help,
           "w=i"    => \$t_warn,
           "c=i"    => \$t_crit);

# Get CPU usage
$ENV{LC_ALL}="en_US"; # Ensure mpstat runs under en_US locale
open (MPSTAT, 'mpstat 1 1 |') or die "Failed to run mpstat: $!";
while (<MPSTAT>) {
    if (/^Average.*\s+(\d+\.\d+)/) {
        $cpu_usage = 100 - $1; # 100% - %idle
        last;
    }
}
close(MPSTAT);

# Ensure CPU usage was successfully retrieved
$cpu_usage eq -1 and die "Can't find CPU information";

# Determine foreground color based on thresholds
my $color = "#94E2D5"; # Default (Green from Kitty theme)
if ($cpu_usage >= $t_crit) {
    $color = "#BF616A"; # Critical (Red from Kitty theme)
} elsif ($cpu_usage >= $t_warn) {
    $color = "#EBCB8B"; # Warning (Yellow from Kitty theme)
}

# Print short_text and full_text with themed colors
printf "<span foreground='#000000' background='#94E2D5'> CPU </span><span foreground='%s' background='#0f1c21aa'> %.2f%%</span>\n", $color, $cpu_usage;

# Print color for bar appearance if needed
if ($cpu_usage >= $t_crit) {
    print "#BF616A\n"; # Critical color
    exit 33;
} elsif ($cpu_usage >= $t_warn) {
    print "#EBCB8B\n"; # Warning color
}

exit 0;

